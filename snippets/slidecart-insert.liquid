<link rel="stylesheet" href="{{ 'drawer-mb.css' | asset_url }}">

{% assign insuranceProduct = all_products["shipping-insurance"] %}
<script>
	var CustomInsuraceVariants = [
	{% for variant in insuranceProduct.variants %}
		"{{variant.id}}", 
	{% endfor %}
	]
</script>
<script>
	var currency = '{{ shop.money_with_currency_format | remove: ' ' | split: '' | first }}';
	var cart_price = '{{ cart.items_subtotal_price | money_without_currency | round:2 }}';
</script>
<script type="application/json" data-ajax-cart-initial-state class="__init"> {{ cart | json }} </script> 
<script type="application/json" data-ajax-cart-configuration class="__init"> { "addToCartCssClass": "js-my-cart-open" } </script>

  <!-- Swiper JS Add PDM By Samu3le-->
  <script src="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.js"></script>
  
  <!-- Initialize Swiper -->
  <script>
    // align cards center when they nedded
    const displayCard = () => {
      if(document.body.hasAttribute("data-variantb-upsell-carousel")){
        const customUpsell = document.querySelector(".my-floating-cart form.my-cart .custom_upsell .swiper-wrapper");
        if (!customUpsell) return;
        const shouldCenterSlide = customUpsell.querySelectorAll(".swiper-slide").length <= 2;
        customUpsell.classList.toggle('align-slide', shouldCenterSlide);
      }
    }
    //create swiper Upsell 
    const upsellSwiper = () => {
      const isMobile = window.innerWidth <= 768;
      if(isMobile){
        return new Swiper('.swiper.custom_upsell.variant_v', {
          slidesPerView: "auto",
          centeredSlides: false,
          slidesOffsetAfter: 20, 
          pagination: {
            el: '.swiper-pagination',
            clickable: true,
          },
          mousewheel:{
            forceToAxis:true
          }
        });
      }else{
        return new Swiper('.swiper.custom_upsell.variant_v', {
          slidesPerView: "auto",
          centeredSlides: false,
          slidesOffsetAfter: 20, 
          pagination: {
            el: '.swiper-pagination',
            clickable: true,
          },
          navigation: {
            nextEl: '.swiper-button-next',
            prevEl: '.swiper-button-prev',
          },
          mousewheel:{
            forceToAxis:true
          }
        });
      }
    }
    //show upsell data only if the contain product
    const showUpsell = () => {
      if(document.body.hasAttribute('data-variantb-upsell-carousel') || document.body.hasAttribute('data-variantc-upsell-carousel')){
        const myCart = document.querySelector('form.my-cart');
        if (myCart) {
          const upsell = myCart.querySelector('.swiper.custom_upsell');
          if (upsell) {
            const upsellProducts = document.querySelectorAll('.swiper-slide.upsell_main.variant_v');
            const hasUpsellProducts = upsellProducts.length == 0;
            upsell.classList.toggle('notVisible', hasUpsellProducts);
          }
        }
      }
    };
    //init functionalities swiper upsell by pdm
    const initUpsellSwiper = () => {
      displayCard();
      showUpsell();
      const upsell = upsellSwiper();
      if(document.body.hasAttribute('data-variantc-upsell-carousel')){
        if(upsell){
          upsell.init();
        }
      }
      if(document.body.hasAttribute('data-variantb-upsell-carousel')){
        const isMobile = window.innerWidth <= 1179;
        if(isMobile && upsell){
          upsell.init();
        }
      }
    }
    window.initUpsellSwiper =   initUpsellSwiper; 
  </script>

<script type="module"> import { configureCart, subscribeToCartSectionsUpdate } from '{{ "liquid-ajax-cart-v1.11.1.js" | asset_url  }}'; 
	configureCart('addToCartCssClass', 'js-my-cart-open'); 
  initUpsellSwiper(); //Upsell Swiper PDM when add product need show upsell slider
	subscribeToCartSectionsUpdate( sections => {
		updateShippingInsurance();
		if(typeof startCartTimer == 'function') {
			startCartTimer(15 * 60);
		}
    initUpsellSwiper();
	});
</script> 

<script>

	$("body").on("click", "button.drawer__cart-checkout", function() {
		console.log("Checkout clicked")
		jQuery.getJSON('/cart.js', function(cart) {
			var subTotalPrice = $(".drawer__cart-subtotal-price-end").attr('data-total_price')
			subTotalPrice = subTotalPrice.trim() //remove all whitespaces
			subTotalPrice = subTotalPrice.replace(/[A-Za-z]/g, "")  //remove all letters
			subTotalPrice = subTotalPrice.replace(currency,"") 
			subTotalPrice = parseFloat(subTotalPrice)

			var totalPrice = parseFloat((cart.total_price/100).toFixed(2))
			if (subTotalPrice > 350) {
				totalPrice = totalPrice * 0.90
				totalPrice = parseFloat(totalPrice)
			}
			var insuranceId
			var insurancePrice
			var calcInsuranceTier = Math.ceil(totalPrice / 50) * 50

			if ((totalPrice > 0) && (totalPrice <= 75)){
				insurancePrice = 1.05
				insuranceId = 43291834220783
			}
			else if ((totalPrice >= 76) && (totalPrice <= 100)){
				insurancePrice = 1.50
				insuranceId = 43326164566255
			}
			else if ((totalPrice >= 101) && (totalPrice <= 200)){
				insurancePrice = 2.80
				insuranceId = 43326164599023
			}
			else if ((totalPrice >= 201) && (totalPrice <= 250)){
				insurancePrice = 3.25
				insuranceId = 43326164631791
			}
			else if ((totalPrice >= 251) && (totalPrice <= 300)){
				insurancePrice = 3.90
				insuranceId = 43326164664559
			}
			else if ((totalPrice >= 301) && (totalPrice <= 400)){
				insurancePrice = 4.2
				insuranceId = 43326164697327
			}
			else if ((totalPrice >= 401) && (totalPrice <= 1000) ){
				insurancePrice = parseFloat((0.011 * calcInsuranceTier).toFixed(2))
				insuranceId = CustomInsuraceVariants[(calcInsuranceTier/50)-3]
			}
			else if ((totalPrice >= 1001)){
				insurancePrice = 18.00
				insuranceId = 43326855282927
			}
			var checkSwitch = $(".insurance__switch-wrapper input").is(":checked")
			if (checkSwitch) {
				for (let xx = 0; xx < cart.items.length; xx++) {
					if (cart.items[xx].product_id === 7813366743279) {
						console.log("Found")
						var prodId= cart.items[xx].id
						jQuery.ajax({
							type: 'POST',
							url: '/cart/change.js', 
							data: { quantity: 0, id: prodId }, 
							dataType: 'json',
							success: console.log("Success! Insurance removed!")
						});
					}
				}
				setTimeout(function() {
					jQuery.ajax({
						type: 'POST',
						url: '/cart/add.js', 
						data: { quantity: 1, id: insuranceId }, 
						dataType: 'json',
						success: console.log("Success! Insurance added!")
					});
				}, 200)
			}
				else {
				for (let yy = 0; yy < cart.items.length; yy++) {
					if (cart.items[yy].product_id === 7813366743279) {
						var prodId= cart.items[yy].product_id
						jQuery.ajax({
							type: 'POST',
							url: '/cart/change.js', 
							data: { quantity: 0, id: prodId }, 
							dataType: 'json',
							success: console.log("Success! Insurance removed!")
						});
					}
				}
			}
			setTimeout(function() {
				window.location = "/checkout"
			}, 1200)
		})
	})

	const updateShippingInsurance = () => {
		fetch('https://www.qureskincare.com/cart.js')
		.then(response => response.json())
		.then(cart => {
			var subTotalPrice = $(".cart_items_subtotal_price").text();
			subTotalPrice = subTotalPrice.trim() //remove all whitespaces
			subTotalPrice = subTotalPrice.replace(/[A-Za-z]/g, "")  //remove all letters
			subTotalPrice = subTotalPrice.replace(currency,"") 
			subTotalPrice = parseFloat(subTotalPrice).toFixed(2);
		
			var totalPrice = parseFloat((cart.total_price/100).toFixed(2))
			if (subTotalPrice > 350) {
				totalPrice = totalPrice * 0.90
				totalPrice = parseFloat(totalPrice)
			}
		
			var calcInsuranceTier = Math.ceil(totalPrice / 50) * 50
			var insurancePrice = parseFloat((0.011 * calcInsuranceTier).toFixed(2))
		
			if ((totalPrice > 0) && (totalPrice <= 75)){
				insurancePrice = 1.05
			}
			else if ((totalPrice >= 76) && (totalPrice <= 100)){
				insurancePrice = 1.50
			}
			else if ((totalPrice >= 101) && (totalPrice <= 200)){
				insurancePrice = 2.80
			}
			else if ((totalPrice >= 201) && (totalPrice <= 250)){
				insurancePrice = 3.25
			}
			else if ((totalPrice >= 251) && (totalPrice <= 300)){
				insurancePrice = 3.90
			}
			else if ((totalPrice >= 301) && (totalPrice <= 400)){
				insurancePrice = 4.2
			}
			else if ((totalPrice >= 401) && (totalPrice <= 1000) ){
				insurancePrice = parseFloat((0.011 * calcInsuranceTier).toFixed(2))
				insuranceId = CustomInsuraceVariants[(calcInsuranceTier/50)-3]
			}
			else if ((totalPrice >= 1001)){
				insurancePrice = 18.00
				insuranceId = 43326855282927
			}
			
			var priceWithInsurance = totalPrice + insurancePrice
			var priceWithoutInsurance 
			priceWithoutInsurance = cart.total_price
			var checkSwitch = $(".insurance__switch-wrapper input").is(":checked")
			$(".insurance__cost").text(currency+insurancePrice.toFixed(2))
			
			var insurance__cost = parseFloat((0.011 * calcInsuranceTier).toFixed(2))
			var insuranceInt = parseInt(insurance__cost);
			var cart_latest_price = cart_price;
		
			var Cart_single_price_IS = $('p.drawer__cart-subtotal-price-end').attr('data-total_price').replace(',','.')
			var Compare_price = $('span.old_price-cart').attr('data-compare-price').replace(',','.');
			var total = Cart_single_price_IS
			var inCPRICE = $('.insurance__cost').text().replace(currency,'')
			var InsurancePriceIS = inCPRICE
			var Price_iNT = Cart_single_price_IS
			var Savings_price = parseFloat(Compare_price) - parseFloat(Price_iNT);
			var final_cart_price_WithInsurance = parseFloat(Price_iNT) + parseFloat(InsurancePriceIS)

			if(Cart_single_price_IS > 100)
			{
				$("#savings-amount").html(currency + parseInt(Savings_price, 10));
			}

			if (checkSwitch) {
				var convert_price_is = final_cart_price_WithInsurance
				$("span.cart_items_subtotal_price").html(" " + currency + parseFloat(convert_price_is).toFixed(2))
			}
			else {
				var insuraceProdId = 7813366743279
				$("span.cart_items_subtotal_price").html(" " + currency + Cart_single_price_IS)
		
				for (let yy = 0; yy < cart.items.length; yy++) {
					if (cart.items[yy].product_id === 7813366743279) {
						var prodId= cart.items[yy].id
						jQuery.ajax({
							type: 'POST',
							url: '/cart/change.js', 
							data: { quantity: 0, id: prodId }, 
							dataType: 'json',
							success: console.log("Success! Insurance removed!")
						});
					}
				}
			}

		})
		.catch(error => {
				console.error('Error:', error);
		});
	}
</script>